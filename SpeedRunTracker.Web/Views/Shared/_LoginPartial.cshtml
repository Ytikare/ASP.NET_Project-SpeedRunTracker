@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    @if (User.IsInRole(ApplicationRoles.Admin.ToString()) || User.IsInRole(ApplicationRoles.Moderaton.ToString()))
    {
        <li class="nav-item dropdown text-white">
            <a class="text-white nav-link dropdown-toggle" data-bs-toggle="dropdown" role="button" aria-haspopup="false" aria-expanded="false">Mod menu</a>
            <div class="dropdown-menu" data-bs-popper="static">
                <a class="dropdown-item text-white" asp-controller="Moderation" asp-action="Dashboard">Dashboard</a>
                        <a asp-controller="Games" asp-action="Add" class="dropdown-item text-white">Add game</a>
                <a asp-controller="Category" asp-action="Add" class="dropdown-item text-white">Add category</a>
                <a asp-controller="Genre" asp-action="Add" class="dropdown-item text-white">Add genre</a>
            </div>
        </li>
    }
    <li class="nav-item">
        <a  class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button  type="submit" class="text-white nav-link btn btn-link">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
            <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>